type Chat = record { participants : vec text; messages : vec Message };
type Error = record { message : text };
type Job = record {
  id : nat64;
  client : text;
  title : text;
  chat : opt Chat;
  description : text;
  deadline : text;
  funded : bool;
  proposals : vec Proposal;
  budget : nat64;
  freelancer : opt text;
};
type Message = record { content : text; sender : text; timestamp : nat64 };
type Proposal = record {
  is_accepted : bool;
  cover_letter : text;
  freelancer : text;
};
type Result = variant { Ok : bool; Err : Error };
type Result_1 = variant { Ok : Chat; Err : Error };
type Result_2 = variant { Ok : nat64; Err : Error };
service : {
  accept_proposal : (nat64, text) -> (Result);
  delete_job : (nat64) -> (Result);
  fund_job : (nat64, text) -> (Result);
  get_chat : (nat64) -> (Result_1) query;
  get_freelancer_jobs : (text) -> (vec Job) query;
  get_jobs : () -> (vec Job) query;
  get_jobs_by_client : () -> (vec Job) query;
  post_job : (text, text, nat64, text, text) -> (Result_2);
  reject_proposal : (nat64, text) -> (Result);
  start_chat : (nat64, text) -> (Result);
  submit_proposal : (nat64, text, text) -> (Result);
}
